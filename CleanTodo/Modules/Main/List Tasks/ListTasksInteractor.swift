//
//  ListTasksInteractor.swift
//  CleanTodo
//
//  Created by Zaim Ramlan on 05/03/2018.
//  Copyright (c) 2018 zaimramlan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListTasksBusinessLogic {
    func fetchFromDataStore(with request: ListTasksModels.FetchFromDataStore.Request)
    func selectTask(with request: ListTasksModels.SelectTask.Request)
}

protocol ListTasksDataStore {
    var tasks: [String]? { get set }
}

class ListTasksInteractor: ListTasksBusinessLogic, ListTasksDataStore {
    var worker: ListTasksWorker? = ListTasksWorker()
    var presenter: ListTasksPresentationLogic?
    var tasks: [String]?
    
    // MARK: Fetch Data From DataStore
    
    func fetchFromDataStore(with request: ListTasksModels.FetchFromDataStore.Request) {
        tasks = worker?.fetchFromDataStore()
        let response = ListTasksModels.FetchFromDataStore.Response(tasks: tasks!)
        presenter?.presentFetchFromDataStoreResult(with: response)
    }
    
    // MARK: Use Case - Select Task
    
    func selectTask(with request: ListTasksModels.SelectTask.Request) {
        guard let task = request.task, let tasksList = tasks else { return }
        
        tasks = worker?.removeTask(task, from: tasksList)
        
        let response = ListTasksModels.SelectTask.Response(tasks: tasks!)
        presenter?.presentSelectTaskResult(with: response)
    }
}
