//
//  ListTasksViewControllerTests.swift
//  CleanTodo
//
//  Created by Zaim Ramlan on 05/03/2018.
//  Copyright (c) 2018 zaimramlan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

//@testable import CleanTodo
//import XCTest
//
//class ListTasksViewControllerTests: XCTestCase
//{
//  // MARK: Subject under test
//  
//  var sut: ListTasksViewController!
//  var window: UIWindow!
//  
//  // MARK: Test lifecycle
//  
//  override func setUp()
//  {
//    super.setUp()
//    window = UIWindow()
//    setupListTasksViewController()
//  }
//  
//  override func tearDown()
//  {
//    window = nil
//    super.tearDown()
//  }
//  
//  // MARK: Test setup
//  
//  func setupListTasksViewController()
//  {
//    let bundle = Bundle.main
//    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
//    sut = storyboard.instantiateViewController(withIdentifier: "ListTasksViewController") as! ListTasksViewController
//  }
//  
//  func loadView()
//  {
//    window.addSubview(sut.view)
//    RunLoop.current.run(until: Date())
//  }
//  
//  // MARK: Test doubles
//  
//  class ListTasksBusinessLogicSpy: ListTasksBusinessLogic
//  {
//    var doSomethingCalled = false
//    
//    func doSomething(request: ListTasks.Something.Request)
//    {
//      doSomethingCalled = true
//    }
//  }
//  
//  // MARK: Tests
//  
//  func testShouldDoSomethingWhenViewIsLoaded()
//  {
//    // Given
//    let spy = ListTasksBusinessLogicSpy()
//    sut.interactor = spy
//    
//    // When
//    loadView()
//    
//    // Then
//    XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
//  }
//  
//  func testDisplaySomething()
//  {
//    // Given
//    let viewModel = ListTasks.Something.ViewModel()
//    
//    // When
//    loadView()
//    sut.displaySomething(viewModel: viewModel)
//    
//    // Then
//    //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
//  }
//}

